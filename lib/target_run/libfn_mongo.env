#!/usr/bin/env bash
####################################
## The following functions will be embedded in both the installer and uninstaller scripts, and execute on target
## include this way in <your_subsystem>/lib/mk_target.env:
##	#############################
##	## libfn
##	#############################
##	function libfn {
##	    cat lib/target_run/libfn_mongo.env | sed "s/^#\(.*\)/\1/"
##	}
####################################

function trust__mongodb_org {
    local file=/etc/apt/sources.list.d/mongodb-org-7.0.list
    if [[ -f $file ]]; then
        echo "OK $file already exists. Doing nothing. Assuming apt has already the key."
        return
    fi
    mkdir -p /etc/apt/sources.list.d
    curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
    if [[ $? -ne 0 ]]; then
        >&2 echo "KO 85847 wget/apt-key failed"
        exit 1
    fi
    
    local mongo_dist="$VERSION_CODENAME"

    if [[ "$mongo_dist" == "trixie" ]]; then
        mongo_dist = "bookworm"
    fi
    echo "deb [ signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] http://repo.mongodb.org/apt/debian ${mongo_dist}/mongodb-org/7.0 main" | tee $file
    echo "written file $file"
}


###################################### ubuntu example
## PRETTY_NAME="Ubuntu 22.04.4 LTS"
## NAME="Ubuntu"
## VERSION_ID="22.04"
## VERSION="22.04.4 LTS (Jammy Jellyfish)"
## VERSION_CODENAME=jammy
## ID=ubuntu
## ID_LIKE=debian
## HOME_URL="https://www.ubuntu.com/"
## SUPPORT_URL="https://help.ubuntu.com/"
## BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
## PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
## UBUNTU_CODENAME=jammy


##################################### debian example
## PRETTY_NAME="Debian GNU/Linux 11 (bullseye)"
## NAME="Debian GNU/Linux"
## VERSION_ID="11"
## VERSION="11 (bullseye)"
## VERSION_CODENAME=bullseye
## ID=debian
## HOME_URL="https://www.debian.org/"
## SUPPORT_URL="https://www.debian.org/support"
## BUG_REPORT_URL="https://bugs.debian.org/"

function print_os_release {
    cat << EOF
PRETTY_NAME="${PRETTY_NAME}"
NAME="${NAME}"
VERSION_ID="${VERSION_ID}"
VERSION="${VERSION}"
VERSION_CODENAME=${VERSION_CODENAME}
ID=${ID}
HOME_URL="${HOME_URL}"
SUPPORT_URL="${SUPPORT_URL}"
BUG_REPORT_URL="${BUG_REPORT_URL}"
EOF
}

function pre_apt {
    echo "WARNING: trusting mongodb.org"
    which gpg > /dev/null
    if [[ $? -ne 0 ]]; then
        apt update
        bash -c 'yes | apt-get --yes install gnupg curl'
    fi
    . /etc/os-release
    echo
    print_os_release
    echo
    trust__mongodb_org
}


function post_install__mongo {
:
## No need to config users:
##   Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
##
#db.createUser({user: "guest", pwd: "passwordForGuest", roles: [ { role: "write", db: "mydb" }]})
    #echo 'db.createUser("guest", "passwordForGuest", true);' > file.js
    #mongo mydb file.js
    #TypeError: db.addUser is not a function

}


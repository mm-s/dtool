#!/bin/bash

libmongod__deps_build__apt() {
:
}

libmongod__deps_runtime__apt() {
    cat << EOF
openssl
mongodb-org
dpkg
libcurl4
EOF
}

libmongod__set_vars() {
    libmongod__daemon=$1
    libmongod__listen_port=$2
    libmongod__dbname=$3
    libmongod__user="$4"
    libmongod__passphrase="$5"

    libmongod__path="/var/lib/mongodb"
    libmongod__bind_ip="127.0.0.1"
    libmongod__logfile="/var/log/mongodb/mongod.log"
    libmongod__endpoint="mongodb://127.0.0.1:${libmongod__listen_port}/${libmongod__dbname}"
    #libmongod__endpoint__external="mongodb://${liburl__server_name}:${listen_port}/${db__name}"
    libmongod__conf__file="/etc/mongod.conf"
}

libmongod__vars__echo() {
    cat << EOF
# mongodb =# ${ssn}
libmongod__dbname="${libmongod__dbname}"
libmongod__listen_port="${libmongod__listen_port}"
libmongod__path="${libmongod__path}"
libmongod__bind_ip="${libmongod__bind_ip}"
libmongod__logfile="${libmongod__logfile}"
libmongod__conf__file="${libmongod__conf__file}"
libmongod__endpoint="${libmongod__endpoint}"

EOF
}

libmongod__get_bind_ips() {
    # this is necessary to appease nodejs libraries, some of which prefer
    # ::1 instead of localhost; note, that bind_ip is expected to be
    # just one IP address
    local bind_ip=$1
    if [[ "${bind_ip}" == '127.0.0.1' ]]; then
        echo "::1,${bind_ip}"
    else
        echo "${bind_ip}"
    fi
}

libmongod__gen__conf() {
    local jail=$1
    cat << EOF
###############################################################################################################
##   mongodb conf: ${libmongod__conf__file}
###############################################################################################################
EOF
    mkdir -p $(dirname ${jail}${libmongod__conf__file})
    cat << EOF | tee ${jail}${libmongod__conf__file}__postinstall | sed "s~^\(.*\)~## \1~" 
# mongod.conf
storage:
  dbPath: ${libmongod__path}
#  engine:
#  wiredTiger:

systemLog:
  destination: file        #TODO: journald
  logAppend: false
  path: ${libmongod__logfile}

# network interfaces
net:
  ipv6: true
  port: ${libmongod__listen_port}
  bindIp: $(libmongod__get_bind_ips "${libmongod__bind_ip}")

# how the process runs
processManagement:
  timeZoneInfo: /usr/share/zoneinfo
EOF
    cat << EOF  
###############################################################################################################

EOF
}

libmongod__declare_listening_tcp_ports() {
    libss__declare_listening_tcp_port "" ${libmongod__listen_port} mongo localhost
}

libmongod__libfn() {
    if [[ -f ${once_guard_prefix}_${m}_libmongod__libfn ]]; then
        return
    else
        touch ${once_guard_prefix}_${m}_libmongod__libfn
    fi
    cat ${system_home}/lib/target_run/libfn_mongo.env | grep -v '^#'
}

libmongod__steps__pre_install() {
    cat << EOF
rm -rf ${libmongod__path}
mkdir -p ${libmongod__path}
chown mongodb:mongodb ${libmongod__path} -R
rm -f ${libmongod__logfile}
EOF
}

libmongod__steps__post_install() {
    if [[ -f ${once_guard_prefix}_${m}_libmongod__steps__post_install ]]; then
        return
    else
        touch ${once_guard_prefix}_${m}_libmongod__steps__post_install
    fi
    cat << EOF
mv ${libmongod__conf__file}__postinstall ${libmongod__conf__file}
systemctl restart mongod
EOF
}

libmongod__steps__pre_uninstall() {
:
}

libmongod__steps__post_uninstall() {
    cat << EOF
rm -rf ${libmongod__path}
rm -f ${libmongod__logfile}

EOF
}

libmongod__systemctl_services() {
:
}

libmongod__systemctl_services__shared() {
    if [[ -f ${once_guard_prefix}_${m}_libmongod__systemctl_services__shared ]]; then
        return
    else
        touch ${once_guard_prefix}_${m}_libmongod__systemctl_services__shared
    fi
    echo "mongod"
}

libmongod__amend() {
:
}

libmongod__hot_upgrade__info() {
    #d|f preserve-runtime_dir/file    chown-user chown-grp
    echo "d ${libmongod__path} mongodb mongodb"
}

libmongod__constructor() {
:
}


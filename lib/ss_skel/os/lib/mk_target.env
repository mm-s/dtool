#!/bin/bash

mk_target__deps_build__apt() {
:
}

mk_target__deps_runtime__apt() {
:
}

mk_target__build_order__depends() {
    echo ""
}

mk_target__check_instance() {
    check_instance__p2p_infrastructure
}

mk_target__resolve_variables() {
    #       dest_variable               SS                  instance            network         var
}

mk_target__set_vars() {
    #---------- subsystem
    ss_version="1.0"
    ss_test__delay="0"
    secrets_dir="${ss_secrets__root}"
    libss__set_vars

    #---------------------- config
    build_config="dotool.env"


}

mk_target__vars__echo() {
    libss__vars__echo
    libweb__vars__echo
    mk_target__vars__echo__header
    cat << EOF
ss_version="${ss_version}"
ss_test__delay="${ss_test__delay}"
secrets_dir="${secrets_dir}"
build_config="${build_config}"

EOF
}

# --------------------- secrets
mk_target__secrets__version() {
    echo "1"
}

mk_target__secrets__print() {
    cat << EOF

EOF
}

mk_target__secrets__init() {
:
}
# -/------------------- secrets

mk_target__generate_static_conf() {
    echo "###############################################"
    echo "## build_conf_file: ${build_config}"
    echo "###############################################"
    mkdir -p $(dirname ${build_config})
    cat << EOF | tee ${build_config} | sed "s~\(.*\)~## \1~"

EOF

}

mk_target__build_install() {
    local ss_cache_dir=$1
    local jail=$2
    if [[ -d ${ss_cache_dir}/files ]]; then
        return
    fi
    bin/build_install || {
        >&2 echo "KO 27678 Compilation failed"
        exit 1
    }
    mkdir -p ${ss_cache_dir}/files
    cp -R _output/* ${ss_cache_dir}/files/
}

mk_target__transfer_from_cache() {
    local ss_cache_dir=$1
    local jail=$2
    mkdir -p ${jail}/${htdocs}
#    cp -R ${ss_cache_dir}/files/* ${jail}/${htdocs}/

}

mk_target__libfn() {
:
}

mk_target__steps__pre_install() {
:
}

mk_target__steps__post_install() {
:
}

mk_target__steps__pre_uninstall() {
:
}

mk_target__steps__post_uninstall() {
:
}

mk_target__declare_listening_tcp_ports() {
:
}

mk_target__systemctl_services() {
:
}

mk_target__systemctl_services__shared() {
:
}

mk_target__libweb_info() {
:
}

mk_target__amend() {
    local jail=$1
    libss__amend "${jail}" ""
    #libweb__amend "${jail}" ""
}

mk_target__constructor() {
:
}
